<style>
  .container {
    max-width: 1300px;
    margin: 0 auto;
    padding: 0 10px;
  }


  button[type='submit'] {
    width: 100%;
    padding: 14px;
    background-color: #ff5f6d;
    color: #fff;
    border: none;
    font-size: 1.2rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
    margin-top: 20px;
  }

  button[type='submit']:hover {
    background-color: #ff4e50;
  }

  /* New classes for styling */
  .blog-form {
    display: flex;
    gap: 20px;
  }

  .main-container {
    flex-grow: 1;
    border-radius: 5px;
  }

  .message {
    background-color: #f0a2a8;
    color: #000000;
  }

  .prop-container {
    border-radius: 5px;
    display: flex;
    flex-direction: column;
  }

  .image-placeholder {
    background-color: #ffffff;
    width: 100%;
    height: 100px;
    border: 0.5px dashed #ddd;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 14px;
    color: #999;
    outline: 1px dashed #000;
  }

  .editor-container {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
  }

  .tab-container {
    display: flex;
    border: 1px solid #d0d7de;
    border-bottom: none;

    background-color: #f6f8fa;
  }

  .tab {
    padding: 8px 16px;
    cursor: pointer;
    border-right: 1px solid #d0d7de;
    color: #24292f;
    background: none;
    border: none;
    font-size: 14px;
  }

  .tab:first-child {
    border-radius: 6px 0 0 0;
  }

  .tab.active {
    background-color: #ffffff;
    border-bottom: 2px solid #0969da;
  }

  .toolbar-button {
    padding: 4px 8px;
    background: none;
    border: 1px solid transparent;
    border-radius: 4px;
    cursor: pointer;
  }

  .toolbar-button:hover {
    background-color: #eaeef2;
    border-color: #d0d7de;
  }

  .content-area {
    width: 100%;
    min-height: 200px;
    padding: 16px;
    border: 1px solid #d0d7de;
    border-radius: 0 0 6px 6px;
    font-family: inherit;
    font-size: 14px;
    line-height: 1.5;
    resize: vertical;
    box-sizing: border-box;
  }

  .preview-area {
    display: none;
    width: 100%;
    min-height: 300px;
    padding: 16px;
    border: 1px solid #d0d7de;
    background-color: #ffffff;
    box-sizing: border-box;
  }

  .helper-text {
    margin-top: 8px;
    color: #57606a;
    font-size: 12px;
  }

  /* Responsive styles */
  @media (max-width: 768px) {
    .blog-form {
      flex-direction: column;
      /* Stack elements vertically */
    }

    .main-container,
    .prop-container {
      width: 100%;
      /* Full width on small screens */
      margin-bottom: 10px;
      /* Space between elements */
    }

    button {
      font-size: 1rem;
      /* Smaller button text */
    }

    .image-placeholder {
      height: 80px;
      /* Adjust height for smaller screens */
    }
  }
</style>

<a href="/dashboard">&larr; Back</a>
<div class="admin-title">
  <h2>View / Edit Post</h2>

  <form action="/delete-post/<%= data._id %>?_method=DELETE" method="POST">
    <input type="submit" value="Delete" class="btn-delete btn">
  </form>
</div>

<form class="blog-form" method="post" action="/edit-post/<%= data._id %>?_method=PUT" enctype="multipart/form-data">
  <div class="main-container">
    <% if (typeof message !=='undefined' && message.errors && message.errors.length) { %>
      <div class="message">
        <% message.errors.forEach(err=> { %>
          <p>
            <%= err.msg %>
          </p>
          <% }); %>
      </div>
      <% } %>

        <label for="blog-title"><b>Blog Title</b></label>
        <input name="title" type="text" id="blog-title" placeholder="Enter your blog title..."
          value="<%= data.title %>" />

        <label for="blog-content"><b>Blog Content</b></label>
        <div class="editor-container">
          <div class="tab-container">
            <button type="button" class="tab active" onclick="switchTab('write')">Write</button>
            <button type="button" class="tab" onclick="switchTab('preview')">Preview</button>
          </div>

          <textarea id="editor" rows="10" name="body"
            placeholder="Write your blog content here..."><%= data.body %></textarea>
          <div id="preview" class="preview-area"></div>

          <div class="helper-text">Markdown is supported</div>
        </div>
  </div>

  <div class="prop-container">
    <div>
      <label for="author-name"><b>Author Name</b></label>
      <input type="text" id="author-name" placeholder="Your name..." name="author" value="<%= data.author %>" />
    </div>

    <div style="display: flex; flex-direction: column;">
      <label for="poster"><b>Blog Poster</b></label>
      <input type="file" id="poster" name="poster" onchange="loadFile(event)">
      <img id="blogImage" src="<%= data.poster %>" alt="your image" style="width: 100%; height: 300px;" />
    </div>

    <button type="submit">Update</button>
  </div>
</form>


<script src="https://cdnjs.cloudflare.com/ajax/libs/markdown-it/11.0.0/markdown-it.min.js"
  integrity="sha256-3mv+NUxFuBg26MtcnuN2X37WUxuGunWCCiG2YCSBjNc=" crossorigin="anonymous"></script>

<script>
  let mdit = new markdownit();

  function loadFile(event) {
    var image = document.getElementById('blogImage');
    image.src = URL.createObjectURL(event.target.files[0]);
    image.style.display = 'block';
  };

  function switchTab(tab) {
    var editor = document.getElementById('editor');
    var preview = document.getElementById('preview');
    var tabs = document.querySelectorAll('.tab');

    // Remove active class from all tabs
    tabs.forEach(function (t) {
      t.classList.remove('active');
    });

    // Add active class to clicked tab
    if (tab === 'write') {
      tabs[0].classList.add('active');
      editor.style.display = 'block';
      preview.style.display = 'none';
    } else {
      tabs[1].classList.add('active');
      editor.style.display = 'none';
      preview.style.display = 'block';
      let parsedHtml = mdit.render(editor.value)
      preview.innerHTML = parsedHtml
    }
  }

</script>